!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
$.game.process_update	static/playbase.js	/^	$.game.process_update = function(data){$/;"	f
$.game.refresh	static/playbase.js	/^	$.game.refresh = function(event){$/;"	f
$.game.run_action	static/playbase.js	/^	$.game.run_action = function(request){$/;"	f
ActiveGamesHandler	basegame/handlers.py	/^class ActiveGamesHandler(BaseHandler):$/;"	c	inherits:BaseHandler
AttackAction	conquest/models.py	/^class AttackAction(BaseGameAction):$/;"	c	inherits:BaseGameAction
BaseGameAction	basegame/models.py	/^class BaseGameAction(polymodel.PolyModel):$/;"	c	inherits:polymodel.PolyModel
BaseGameInstance	basegame/models.py	/^class BaseGameInstance(polymodel.PolyModel):$/;"	c	inherits:polymodel.PolyModel
BaseGamePlayer	basegame/models.py	/^class BaseGamePlayer(polymodel.PolyModel):$/;"	c	inherits:polymodel.PolyModel
BaseGameState	basegame/models.py	/^class BaseGameState(polymodel.PolyModel):$/;"	c	inherits:polymodel.PolyModel
BaseHandler	base.py	/^class BaseHandler(webapp2.RequestHandler):$/;"	c	inherits:webapp2.RequestHandler
Card	Risk/RiskElements.py	/^class Card(object):$/;"	c	inherits:object
ConquestGameInfoHandler	conquest/handlers.py	/^class ConquestGameInfoHandler(GameInfoHandler):$/;"	c	inherits:GameInfoHandler
ConquestGameInstance	conquest/models.py	/^class ConquestGameInstance(BaseGameInstance):$/;"	c	inherits:BaseGameInstance
ConquestGamePlayHandler	conquest/handlers.py	/^class ConquestGamePlayHandler(GamePlayHandler):$/;"	c	inherits:GamePlayHandler
ConquestGamePlayer	conquest/models.py	/^class ConquestGamePlayer(BaseGamePlayer):$/;"	c	inherits:BaseGamePlayer
ConquestGameState	conquest/models.py	/^class ConquestGameState(BaseGameState):$/;"	c	inherits:BaseGameState
Continent	Risk/RiskElements.py	/^class Continent(object):$/;"	c	inherits:object
GameInfoHandler	basegame/handlers.py	/^class GameInfoHandler(BaseHandler):$/;"	c	inherits:BaseHandler
GamePlayHandler	basegame/handlers.py	/^class GamePlayHandler(BaseHandler):$/;"	c	inherits:BaseHandler
GameTypeNotFoundError	basegame/handlers.py	/^class GameTypeNotFoundError(Exception):$/;"	c	inherits:Exception
Handlebars	static/handlebars.js	/^var Handlebars = {};$/;"	v
Handlebars.registerHelper	static/handlebars.js	/^Handlebars.registerHelper = function(name, fn, inverse) {$/;"	c
Handlebars.registerPartial	static/handlebars.js	/^Handlebars.registerPartial = function(name, str) {$/;"	c
InvalidActionParametersException	basegame/models.py	/^class InvalidActionParametersException(Exception):$/;"	c	inherits:Exception
InvalidGameIdException	basegame/handlers.py	/^class InvalidGameIdException(Exception):$/;"	c	inherits:Exception
InvalidMoveException	ox/models.py	/^class InvalidMoveException(Exception):$/;"	c	inherits:Exception
InvalidStateException	basegame/models.py	/^class InvalidStateException(Exception):$/;"	c	inherits:Exception
JSONEncoderGAE	base.py	/^class JSONEncoderGAE(json.JSONEncoder):$/;"	c	inherits:json.JSONEncoder
LobbyHandler	basegame/handlers.py	/^class LobbyHandler(BaseHandler):$/;"	c	inherits:BaseHandler
MainPage	handler/test.py	/^class MainPage(BaseHandler):$/;"	c	inherits:BaseHandler
MoveAction	conquest/models.py	/^class MoveAction(BaseGameAction):$/;"	c	inherits:BaseGameAction
NewGameHandler	basegame/handlers.py	/^class NewGameHandler(BaseHandler):$/;"	c	inherits:BaseHandler
NewGameHandler	conquest/handlers.py	/^class NewGameHandler(BaseHandler):$/;"	c	inherits:BaseHandler
NewGameHandler	ox/handlers.py	/^class NewGameHandler(BaseHandler):$/;"	c	inherits:BaseHandler
NewGameHandler	simplegame/handlers.py	/^class NewGameHandler(BaseHandler):$/;"	c	inherits:BaseHandler
NotTurnException	basegame/models.py	/^class NotTurnException(Exception):$/;"	c	inherits:Exception
OxInfoHandler	ox/handlers.py	/^class OxInfoHandler(GameInfoHandler):$/;"	c	inherits:GameInfoHandler
OxInstance	ox/models.py	/^class OxInstance(BaseGameInstance):$/;"	c	inherits:BaseGameInstance
OxPlaceAction	ox/models.py	/^class OxPlaceAction(BaseGameAction):$/;"	c	inherits:BaseGameAction
OxPlayHandler	ox/handlers.py	/^class OxPlayHandler(GamePlayHandler):$/;"	c	inherits:GamePlayHandler
OxPlayer	ox/models.py	/^class OxPlayer(BaseGamePlayer):$/;"	c	inherits:BaseGamePlayer
OxState	ox/models.py	/^class OxState(BaseGameState):$/;"	c	inherits:BaseGameState
PlaceAction	conquest/models.py	/^class PlaceAction(BaseGameAction):$/;"	c	inherits:BaseGameAction
Player	Risk/RiskElements.py	/^class Player(object):$/;"	c	inherits:object
ProfileEditHandler	profile/handlers.py	/^class ProfileEditHandler(BaseHandler):$/;"	c	inherits:BaseHandler
ProfileViewHandler	profile/handlers.py	/^class ProfileViewHandler(BaseHandler):$/;"	c	inherits:BaseHandler
RiskGame	Risk/RiskEngine.py	/^class RiskGame(object):$/;"	c	inherits:object
RiskInterface	Risk/RiskInterface.py	/^class RiskInterface(object):$/;"	c	inherits:object
SimpleGameAction	simplegame/models.py	/^class SimpleGameAction(BaseGameAction):$/;"	c	inherits:BaseGameAction
SimpleGameInfoHandler	simplegame/handlers.py	/^class SimpleGameInfoHandler(GameInfoHandler):$/;"	c	inherits:GameInfoHandler
SimpleGameInstance	simplegame/models.py	/^class SimpleGameInstance(BaseGameInstance):$/;"	c	inherits:BaseGameInstance
SimpleGamePlayHandler	simplegame/handlers.py	/^class SimpleGamePlayHandler(GamePlayHandler):$/;"	c	inherits:GamePlayHandler
SimpleGamePlayer	simplegame/models.py	/^class SimpleGamePlayer(BaseGamePlayer):$/;"	c	inherits:BaseGamePlayer
SimpleGameState	simplegame/models.py	/^class SimpleGameState(BaseGameState):$/;"	c	inherits:BaseGameState
StateChangeAction	basegame/models.py	/^class StateChangeAction(BaseGameAction):$/;"	c	inherits:BaseGameAction
Territory	Risk/RiskElements.py	/^class Territory(object):$/;"	c	inherits:object
TerritoryMapper	conquest/models.py	/^class TerritoryMapper():$/;"	c	inherits:
UserProfile	profile/models.py	/^class UserProfile(db.Model):$/;"	c	inherits:db.Model
ViewController	templates/play.html	/^	function ViewController() {$/;"	f
__eq__	profile/models.py	/^    def __eq__(self, other):$/;"	m	class:UserProfile	file:	access:private
__init__	Risk/RiskElements.py	/^	def __init__(self, name):$/;"	m	class:Player	access:public
__init__	Risk/RiskElements.py	/^	def __init__(self, name, continent, owner, unitValue):$/;"	m	class:Continent	access:public
__init__	Risk/RiskElements.py	/^	def __init__(self, name, owner, neighbours):$/;"	m	class:Territory	access:public
__init__	Risk/RiskElements.py	/^	def __init__(self, territory, army):$/;"	m	class:Card	access:public
__init__	Risk/RiskEngine.py	/^	def __init__(self, riskInterface):$/;"	m	class:RiskGame	access:public
__init__	basegame/handlers.py	/^    def __init__(self, request, response):$/;"	m	class:GameInfoHandler	access:public
__init__	basegame/handlers.py	/^    def __init__(self, request, response):$/;"	m	class:GamePlayHandler	access:public
__init__	basegame/models.py	/^    def __init__(self, parent=None, key_name=None, **kwds):$/;"	m	class:BaseGameState	access:public
__init__	conquest/handlers.py	/^    def __init__(self, request, response):$/;"	m	class:ConquestGamePlayHandler	access:public
__init__	conquest/models.py	/^    def __init__(self):$/;"	m	class:TerritoryMapper	access:public
__init__	ox/handlers.py	/^    def __init__(self, request, response):$/;"	m	class:OxPlayHandler	access:public
__init__	simplegame/handlers.py	/^    def __init__(self, request, response):$/;"	m	class:SimpleGamePlayHandler	access:public
__ne__	profile/models.py	/^    def __ne__(self, other):$/;"	m	class:UserProfile	file:	access:private
action_type	basegame/models.py	/^    action_type = 'invalid'$/;"	v	class:BaseGameAction
action_type	basegame/models.py	/^    action_type = 'state_change'$/;"	v	class:StateChangeAction
action_type	conquest/models.py	/^    action_type = 'attack'$/;"	v	class:AttackAction
action_type	conquest/models.py	/^    action_type = 'move'$/;"	v	class:MoveAction
action_type	conquest/models.py	/^    action_type = 'place'$/;"	v	class:PlaceAction
addPlayer	Risk/RiskEngine.py	/^	def addPlayer(self, playerName):$/;"	m	class:RiskGame	access:public
add_action	basegame/models.py	/^    def add_action(self,action):$/;"	m	class:BaseGameState	access:public
add_user	basegame/models.py	/^    def add_user(self, user):$/;"	m	class:BaseGameInstance	access:public
animateDice	static/Dice/Rolling dice test.html	/^		function animateDice(noAttackDice, noDefenceDice){$/;"	f
animateDie	static/Dice/Rolling dice test.html	/^		function animateDie(objDie){$/;"	f
app	main.py	/^app = recording.appstats_wsgi_middleware(app)$/;"	v
app	main.py	/^app = webapp2.WSGIApplication([$/;"	v
attack	Risk/RiskEngine.py	/^	def attack(baseTerritory, enemyTerritory, attackDice, defendDice):$/;"	m	class:RiskGame	access:public
attack_action	conquest/models.py	/^    def attack_action(self, request):$/;"	m	class:ConquestGameState	access:public
attack_rolls	conquest/models.py	/^    attack_rolls = db.ListProperty(int)$/;"	v	class:AttackAction
attackers	conquest/models.py	/^    attackers = db.IntegerProperty()$/;"	v	class:AttackAction
attackingPhase	Risk/RiskEngine.py	/^	def attackingPhase(self):		$/;"	m	class:RiskGame	access:public
attackingPhaseEnd	Risk/RiskEngine.py	/^	def attackingPhaseEnd(self):$/;"	m	class:RiskGame	access:public
attackingPhaseEndBattle	Risk/RiskEngine.py	/^	def attackingPhaseEndBattle(self):$/;"	m	class:RiskGame	access:public
attackingPhasePerformBattle	Risk/RiskEngine.py	/^	def attackingPhasePerformBattle(self, attackArmies, defendArmies):$/;"	m	class:RiskGame	access:public
attackingPhaseRollDice	Risk/RiskEngine.py	/^	def attackingPhaseRollDice(attackArmies, defendArmies):$/;"	m	class:RiskGame	access:public
attackingPhaseTerritorySelected	Risk/RiskEngine.py	/^	def attackingPhaseTerritorySelected(self, territory):$/;"	m	class:RiskGame	access:public
attacking_phase_roll_dice	conquest/models.py	/^def attacking_phase_roll_dice(attack_armies, defend_armies):$/;"	f	access:public
cardSetSelected	Risk/RiskEngine.py	/^	def cardSetSelected(self, cardSet):$/;"	m	class:RiskGame	access:public
check_state	basegame/models.py	/^    def check_state(self, valid_state):$/;"	m	class:BaseGameState	access:public
check_states	basegame/models.py	/^    def check_states(self, valid_states):$/;"	m	class:BaseGameState	access:public
config	main.py	/^config = {$/;"	v
context	base.py	/^    context = dict()$/;"	v	class:BaseHandler
correct_number	simplegame/models.py	/^    correct_number = db.IntegerProperty()$/;"	v	class:SimpleGameState
created	basegame/models.py	/^    created = db.DateProperty(required=True)$/;"	v	class:BaseGameInstance
current_number	simplegame/models.py	/^    current_number = db.IntegerProperty()$/;"	v	class:SimpleGameState
current_player_index	basegame/models.py	/^    current_player_index = db.IntegerProperty(default=0)$/;"	v	class:BaseGameState
current_state	basegame/models.py	/^    current_state = db.ReferenceProperty(BaseGameState)$/;"	v	class:BaseGameInstance
decrease_units	static/board/conquest.js	/^function decrease_units(region, units){$/;"	f
default	base.py	/^    def default(self, obj):$/;"	m	class:JSONEncoderGAE	access:public
defend_rolls	conquest/models.py	/^    defend_rolls = db.ListProperty(int)$/;"	v	class:AttackAction
destination	conquest/models.py	/^    destination = db.IntegerProperty()$/;"	v	class:AttackAction
destination	conquest/models.py	/^    destination = db.IntegerProperty()$/;"	v	class:MoveAction
drawCard	Risk/RiskEngine.py	/^	def drawCard(self):$/;"	m	class:RiskGame	access:public
eliminatePlayer	Risk/RiskEngine.py	/^	def eliminatePlayer(self, player):$/;"	m	class:RiskGame	access:public
end_attack_action	conquest/models.py	/^    def end_attack_action(self, request):$/;"	m	class:ConquestGameState	access:public
end_move_action	conquest/models.py	/^    def end_move_action(self, request):$/;"	m	class:ConquestGameState	access:public
end_turn	basegame/models.py	/^    def end_turn(self):$/;"	m	class:BaseGameState	access:public
error_responce	basegame/handlers.py	/^    def error_responce(self, message):$/;"	m	class:GamePlayHandler	access:public
federated_image_service	profile/models.py	/^			federated_image_service = "https:\/\/secure.gravatar.com\/avatar\/"$/;"	v	class:UserProfile
federated_image_service	profile/models.py	/^		federated_image_service = "http:\/\/www.gravatar.com\/avatar\/"$/;"	v	class:UserProfile
find_game_instance_classes	basegame/handlers.py	/^def find_game_instance_classes(app):$/;"	f	access:public
finish_game	basegame/models.py	/^    def finish_game(self):$/;"	m	class:BaseGameInstance	access:public
foritfyingPhaseTerritorySelected	Risk/RiskEngine.py	/^	def foritfyingPhaseTerritorySelected(self, territory):$/;"	m	class:RiskGame	access:public
fortifyingPhase	Risk/RiskEngine.py	/^	def fortifyingPhase(self):$/;"	m	class:RiskGame	access:public
fortifyingPhaseEnd	Risk/RiskEngine.py	/^	def fortifyingPhaseEnd(self):$/;"	m	class:RiskGame	access:public
game_name	basegame/models.py	/^    game_name = 'basegame' # This *MUST* be the same as gamename$/;"	v	class:BaseGameInstance
game_name	conquest/models.py	/^    game_name = 'conquest'$/;"	v	class:ConquestGameInstance
game_name	ox/models.py	/^    game_name = "ox"$/;"	v	class:OxInstance
game_name	simplegame/models.py	/^    game_name = "simple"$/;"	v	class:SimpleGameInstance
game_player_type	conquest/models.py	/^    game_player_type = ConquestGamePlayer$/;"	v	class:ConquestGameInstance
game_player_type	ox/models.py	/^    game_player_type = OxPlayer$/;"	v	class:OxInstance
game_player_type	simplegame/models.py	/^    game_player_type = SimpleGamePlayer$/;"	v	class:SimpleGameInstance
game_state	basegame/models.py	/^    game_state = db.ReferenceProperty(BaseGameState)$/;"	v	class:BaseGameAction
game_state	basegame/models.py	/^    game_state = db.ReferenceProperty(BaseGameState)$/;"	v	class:BaseGamePlayer
game_state_type	conquest/models.py	/^    game_state_type = ConquestGameState$/;"	v	class:ConquestGameInstance
game_state_type	ox/models.py	/^    game_state_type = OxState$/;"	v	class:OxInstance
game_state_type	simplegame/models.py	/^    game_state_type = SimpleGameState$/;"	v	class:SimpleGameInstance
get	basegame/handlers.py	/^    def get(self):$/;"	m	class:ActiveGamesHandler	access:public
get	basegame/handlers.py	/^    def get(self):$/;"	m	class:LobbyHandler	access:public
get	basegame/handlers.py	/^    def get(self):$/;"	m	class:NewGameHandler	access:public
get	basegame/handlers.py	/^    def get(self, game_id):$/;"	m	class:GameInfoHandler	access:public
get	basegame/handlers.py	/^    def get(self, game_id):$/;"	m	class:GamePlayHandler	access:public
get	conquest/handlers.py	/^    def get(self):$/;"	m	class:NewGameHandler	access:public
get	handler/test.py	/^    def get(self):$/;"	m	class:MainPage	access:public
get	ox/handlers.py	/^    def get(self):$/;"	m	class:NewGameHandler	access:public
get	profile/handlers.py	/^    def get(self):$/;"	m	class:ProfileEditHandler	access:public
get	profile/handlers.py	/^    def get(self):$/;"	m	class:ProfileViewHandler	access:public
get	simplegame/handlers.py	/^    def get(self):$/;"	m	class:NewGameHandler	access:public
get_actions_since	basegame/models.py	/^    def get_actions_since(self,seq_num):$/;"	m	class:BaseGameState	access:public
get_current_player	basegame/models.py	/^    def get_current_player(self):$/;"	m	class:BaseGameState	access:public
get_current_player_data	basegame/models.py	/^    def get_current_player_data(self):$/;"	m	class:BaseGameState	access:public
get_current_user	profile/models.py	/^    def get_current_user(cls):$/;"	m	class:UserProfile	access:public
get_game_instance	basegame/handlers.py	/^def get_game_instance(game_id):$/;"	f	access:public
get_info_dict	basegame/models.py	/^    def get_info_dict(self, target=None):$/;"	m	class:BaseGameAction	access:public
get_info_dict	basegame/models.py	/^    def get_info_dict(self, target=None):$/;"	m	class:BaseGamePlayer	access:public
get_info_dict	basegame/models.py	/^    def get_info_dict(self, target=None):$/;"	m	class:BaseGameState	access:public
get_info_dict	conquest/models.py	/^    def get_info_dict(self, target=None):$/;"	m	class:AttackAction	access:public
get_info_dict	conquest/models.py	/^    def get_info_dict(self, target=None):$/;"	m	class:ConquestGamePlayer	access:public
get_info_dict	conquest/models.py	/^    def get_info_dict(self, target=None):$/;"	m	class:ConquestGameState	access:public
get_info_dict	conquest/models.py	/^    def get_info_dict(self, target=None):$/;"	m	class:MoveAction	access:public
get_info_dict	conquest/models.py	/^    def get_info_dict(self, target=None):$/;"	m	class:PlaceAction	access:public
get_info_dict	ox/models.py	/^    def get_info_dict(self, target=None):$/;"	m	class:OxPlaceAction	access:public
get_info_dict	ox/models.py	/^    def get_info_dict(self, target=None):$/;"	m	class:OxPlayer	access:public
get_info_dict	ox/models.py	/^    def get_info_dict(self, target=None):$/;"	m	class:OxState	access:public
get_info_dict	simplegame/models.py	/^    def get_info_dict(self, target=None):$/;"	m	class:SimpleGameAction	access:public
get_info_dict	simplegame/models.py	/^    def get_info_dict(self, target=None):$/;"	m	class:SimpleGamePlayer	access:public
get_info_dict	simplegame/models.py	/^    def get_info_dict(self, target=None):$/;"	m	class:SimpleGameState	access:public
get_page	basegame/handlers.py	/^    def get_page(self, game_id):$/;"	m	class:GameInfoHandler	access:public
get_page	conquest/handlers.py	/^    def get_page(self, game_instance):$/;"	m	class:ConquestGameInfoHandler	access:public
get_page	conquest/handlers.py	/^    def get_page(self, game_instance):$/;"	m	class:ConquestGamePlayHandler	access:public
get_page	ox/handlers.py	/^    def get_page(self, game_instance):$/;"	m	class:OxInfoHandler	access:public
get_page	ox/handlers.py	/^    def get_page(self, game_instance):$/;"	m	class:OxPlayHandler	access:public
get_page	simplegame/handlers.py	/^    def get_page(self, game_instance):$/;"	m	class:SimpleGameInfoHandler	access:public
get_page	simplegame/handlers.py	/^    def get_page(self, game_instance):$/;"	m	class:SimpleGamePlayHandler	access:public
get_size	conquest/models.py	/^    def get_size(self):$/;"	m	class:TerritoryMapper	access:public
get_territory_index	conquest/models.py	/^    def get_territory_index(self, label):$/;"	m	class:TerritoryMapper	access:public
get_territory_label	conquest/models.py	/^    def get_territory_label(self, index):$/;"	m	class:TerritoryMapper	access:public
get_territory_mapper	conquest/models.py	/^def get_territory_mapper():$/;"	f	access:public
get_update	basegame/handlers.py	/^    def get_update(self, game_instance):$/;"	m	class:GamePlayHandler	access:public
gravatar_url	profile/models.py	/^		gravatar_url = federated_image_service + hashlib.md5(self.user.email().lower()).hexdigest() + "?"$/;"	v	class:UserProfile
gravatar_url	profile/models.py	/^    def gravatar_url(self, size=48, default="identicon", rating="g", secure=False):$/;"	m	class:UserProfile	access:public
grid	ox/models.py	/^    grid = db.ListProperty(int)$/;"	v	class:OxState
group_func	basegame/handlers.py	/^        def group_func(x):$/;"	f	function:LobbyHandler.get	access:public
guess_action	simplegame/handlers.py	/^    def guess_action(self, game_instance):$/;"	m	class:SimpleGamePlayHandler	access:public
guess_action	simplegame/models.py	/^    def guess_action(self, guessed_number):$/;"	m	class:SimpleGameState	access:public
guessed_number	simplegame/models.py	/^    guessed_number = db.IntegerProperty()$/;"	v	class:SimpleGameAction
highlightTerritory	Risk/RiskInterface.py	/^	def highlightTerritory(territory):$/;"	m	class:RiskInterface	access:public
human_game_states	basegame/handlers.py	/^    human_game_states = {$/;"	v	class:LobbyHandler
human_name	basegame/models.py	/^    human_name = 'Base Game'$/;"	v	class:BaseGameInstance
human_name	conquest/models.py	/^    human_name = 'Conquest'$/;"	v	class:ConquestGameInstance
human_name	ox/models.py	/^    human_name = 'Naughts and Crosses'$/;"	v	class:OxInstance
human_name	simplegame/models.py	/^    human_name = 'Number Guessing'$/;"	v	class:SimpleGameInstance
increase_units	static/board/conquest.js	/^function increase_units(region, units){$/;"	f
info_redirect	conquest/models.py	/^    info_redirect = "conquestgameinfo"$/;"	v	class:ConquestGameInstance
info_redirect	ox/models.py	/^    info_redirect = "oxgameinfo"$/;"	v	class:OxInstance
info_redirect	simplegame/models.py	/^    info_redirect = "simplegameinfo"$/;"	v	class:SimpleGameInstance
isEliminated	Risk/RiskElements.py	/^	def isEliminated(self):$/;"	m	class:Player	access:public
isNeighbour	Risk/RiskElements.py	/^	def isNeighbour(self, territory):$/;"	m	class:Territory	access:public
is_current_player	basegame/models.py	/^    def is_current_player(self):$/;"	m	class:BaseGameState	access:public
jinja2	base.py	/^    def jinja2(self):$/;"	m	class:BaseHandler	access:public
jinja2_fact	base.py	/^def jinja2_fact(app):$/;"	f	access:public
join_action	basegame/handlers.py	/^    def join_action(self, game_instance):$/;"	m	class:GameInfoHandler	access:public
joingame	templates/game_info.html	/^	function joingame(event){$/;"	f
last_sequence_number	basegame/models.py	/^    last_sequence_number = db.IntegerProperty(required=True, default=-1)$/;"	v	class:BaseGameState
load_inherited_models	basegame/handlers.py	/^def load_inherited_models(app):$/;"	f	access:public
make_action	conquest/handlers.py	/^    def make_action(self, target):$/;"	m	class:ConquestGamePlayHandler	access:public
make_guess	templates/play_simple.html	/^	function make_guess(event){$/;"	f
max_players	basegame/models.py	/^    max_players = 2$/;"	v	class:BaseGameInstance
moveArmies	Risk/RiskEngine.py	/^	def moveArmies(self, fromTerritory, toTerritory, armies):$/;"	m	class:RiskGame	access:public
moveArmies	Risk/RiskInterface.py	/^	def moveArmies(minMoveArmies, maxMoveArmies):$/;"	m	class:RiskInterface	access:public
move_action	conquest/models.py	/^    def move_action(self, request):$/;"	m	class:ConquestGameState	access:public
movingArmiesSelected	Risk/RiskEngine.py	/^	def movingArmiesSelected(self, armies):$/;"	m	class:RiskGame	access:public
name	profile/models.py	/^			name=gae_user.nickname().rsplit("@",1)[0],$/;"	v	class:UserProfile
name	profile/models.py	/^    name = db.StringProperty()$/;"	v	class:UserProfile
new_state	basegame/models.py	/^    new_state = db.StringProperty()$/;"	v	class:BaseGameAction
nextPhase	Risk/RiskEngine.py	/^	def nextPhase():$/;"	m	class:RiskGame	access:public
nextPlayer	Risk/RiskEngine.py	/^	def nextPlayer(self):$/;"	m	class:RiskGame	access:public
origin	conquest/models.py	/^    origin = db.IntegerProperty()$/;"	v	class:AttackAction
origin	conquest/models.py	/^    origin = db.IntegerProperty()$/;"	v	class:MoveAction
owned_armies	conquest/models.py	/^    owned_armies = db.IntegerProperty()$/;"	v	class:ConquestGamePlayer
placeArmies	Risk/RiskEngine.py	/^	def placeArmies(territory, armies = 1):$/;"	m	class:RiskGame	access:public
place_action	conquest/models.py	/^    def place_action(self, request):$/;"	m	class:ConquestGameState	access:public
place_action	ox/handlers.py	/^    def place_action(self, game_instance):$/;"	m	class:OxPlayHandler	access:public
place_action	ox/models.py	/^    def place_action(self, position):$/;"	m	class:OxState	access:public
place_marker	templates/play_ox.html	/^	function place_marker(event){$/;"	f
place_units_action	static/board/conquest.js	/^function place_units_action(event){$/;"	f
placed_units	conquest/models.py	/^    placed_units = db.ListProperty(int)$/;"	v	class:PlaceAction
play_index	basegame/models.py	/^    play_index = db.IntegerProperty()$/;"	v	class:BaseGamePlayer
play_redirect	conquest/models.py	/^    play_redirect = "conquestgameplay"$/;"	v	class:ConquestGameInstance
play_redirect	ox/models.py	/^    play_redirect = "oxgameplay"$/;"	v	class:OxInstance
play_redirect	simplegame/models.py	/^    play_redirect = "simplegameplay"$/;"	v	class:SimpleGameInstance
player	basegame/models.py	/^    player = db.ReferenceProperty(UserProfile)$/;"	v	class:BaseGamePlayer
player_index	basegame/models.py	/^    player_index = db.IntegerProperty()$/;"	v	class:BaseGameAction
player_symbol	ox/models.py	/^    player_symbol = db.StringProperty(choices=set(['O','X']))$/;"	v	class:OxPlayer
players	basegame/models.py	/^    players = db.ListProperty(db.Key) # Keys for UserProfile$/;"	v	class:BaseGameInstance
position	ox/models.py	/^    position = db.IntegerProperty()$/;"	v	class:OxPlaceAction
positioningPhase	Risk/RiskEngine.py	/^	def positioningPhase(self):$/;"	m	class:RiskGame	access:public
positioningPhaseCardsSelected	Risk/RiskEngine.py	/^	def positioningPhaseCardsSelected(self, cardSet):		$/;"	m	class:RiskGame	access:public
positioningPhaseEnd	Risk/RiskEngine.py	/^	def positioningPhaseEnd(self):$/;"	m	class:RiskGame	access:public
positioningPhaseTerritorySelected	Risk/RiskEngine.py	/^	def positioningPhaseTerritorySelected(self, territory):		 $/;"	m	class:RiskGame	access:public
possible_states	basegame/models.py	/^    possible_states = set(['init', 'finished'])$/;"	v	class:BaseGameState
possible_states	conquest/models.py	/^    possible_states = BaseGameState.possible_states | set([$/;"	v	class:ConquestGameState
possible_states	ox/models.py	/^    possible_states = BaseGameState.possible_states | set(['playing'])$/;"	v	class:OxState
possible_states	simplegame/models.py	/^    possible_states = BaseGameState.possible_states | set(['guessing'])$/;"	v	class:SimpleGameState
post	basegame/handlers.py	/^    def post(self, game_id):$/;"	m	class:GameInfoHandler	access:public
post	basegame/handlers.py	/^    def post(self, game_id):$/;"	m	class:GamePlayHandler	access:public
post	profile/handlers.py	/^    def post(self):$/;"	m	class:ProfileEditHandler	access:public
post_action	basegame/handlers.py	/^    def post_action(self, game_state, new_action):$/;"	m	class:GamePlayHandler	access:public
prepare_context	basegame/handlers.py	/^    def prepare_context(self, game_instance):$/;"	m	class:GameInfoHandler	access:public
prepare_context	basegame/handlers.py	/^    def prepare_context(self, game_instance):$/;"	m	class:GamePlayHandler	access:public
prepmap	static/board/conquest.js	/^function prepmap() {$/;"	f
process_action	static/board/conquest.js	/^function process_action(event, action){$/;"	f
process_action	templates/play_ox.html	/^	function process_action(event, action){$/;"	f
process_action	templates/play_simple.html	/^	function process_action(event, action){$/;"	f
reinforce_action	conquest/models.py	/^    def reinforce_action(self, request):$/;"	m	class:ConquestGameState	access:public
reinforce_units_action	static/board/conquest.js	/^function reinforce_units_action(event){$/;"	f
render_response	base.py	/^    def render_response(self, _template, context = None):$/;"	m	class:BaseHandler	access:public
request.action	static/playbase.js	/^			action:"update",$/;"	p
request.from	static/playbase.js	/^			from:$.game.last_sequence_number$/;"	p
resolve_players	basegame/models.py	/^    def resolve_players(self):$/;"	m	class:BaseGameInstance	access:public
resupplyArmies	Risk/RiskEngine.py	/^	def resupplyArmies(self):$/;"	m	class:RiskGame	access:public
rollAttackDice	static/Dice/Rolling dice test.html	/^		function rollAttackDice(diceArray){$/;"	f
rollDefenceDice	static/Dice/Rolling dice test.html	/^		function rollDefenceDice(diceArray){$/;"	f
rollDie	static/Dice/Rolling dice test.html	/^		function rollDie(objDie){$/;"	f
run_action	conquest/handlers.py	/^        def run_action(game_instance):$/;"	f	function:ConquestGamePlayHandler.make_action	access:public
selectCardSet	Risk/RiskInterface.py	/^	def selectCardSet():$/;"	m	class:RiskInterface	access:public
selectDice	Risk/RiskInterface.py	/^	def selectDice():$/;"	m	class:RiskInterface	access:public
selectTerritory	Risk/RiskInterface.py	/^	def selectTerritory():$/;"	m	class:RiskInterface	access:public
sequence_number	basegame/models.py	/^    sequence_number = db.IntegerProperty()$/;"	v	class:BaseGameAction
set_teritory	static/board/conquest.js	/^function set_teritory(region_id, units, owner){$/;"	f
setup	basegame/models.py	/^    def setup(self,players):$/;"	m	class:BaseGameState	access:public
setup	conquest/models.py	/^    def setup(self, players):$/;"	m	class:ConquestGameState	access:public
setup	ox/models.py	/^    def setup(self,players):$/;"	m	class:OxState	access:public
setup	simplegame/models.py	/^    def setup(self, players):$/;"	m	class:SimpleGameState	access:public
setupPhase	Risk/RiskEngine.py	/^	def setupPhase(self):$/;"	m	class:RiskGame	access:public
setupPhaseEnd	Risk/RiskEngine.py	/^	def setupPhaseEnd(self):			$/;"	m	class:RiskGame	access:public
setupPhasePlaceArmies	Risk/RiskEngine.py	/^	def setupPhasePlaceArmies(self, territory):	$/;"	m	class:RiskGame	access:public
start_action	basegame/handlers.py	/^    def start_action(self, game_instance):$/;"	m	class:GameInfoHandler	access:public
start_game	basegame/models.py	/^    def start_game(self):$/;"	m	class:BaseGameInstance	access:public
startgame	templates/game_info.html	/^	function startgame(event){$/;"	f
state	basegame/models.py	/^    state = db.StringProperty(required=True, choices=set(["open", "playing", "finished"]))$/;"	v	class:BaseGameInstance
state	conquest/models.py	/^    state = db.StringProperty(choices=possible_states, default='init')$/;"	v	class:ConquestGameState
state	ox/models.py	/^    state = db.StringProperty(choices=possible_states, default='init')$/;"	v	class:OxState
state	simplegame/models.py	/^    state = db.StringProperty(choices=possible_states, default='init')$/;"	v	class:SimpleGameState
stopDice	static/Dice/Rolling dice test.html	/^		function stopDice(attack1, attack2, attack3, defence1, defence2){$/;"	f
territorySelected	Risk/RiskEngine.py	/^	def territorySelected(self, territory):$/;"	m	class:RiskGame	access:public
territory_player	conquest/models.py	/^    territory_player = db.ListProperty(int)$/;"	v	class:ConquestGameState
territory_units	conquest/models.py	/^    territory_units = db.ListProperty(int)$/;"	v	class:ConquestGameState
total_players	basegame/models.py	/^    total_players = db.IntegerProperty()$/;"	v	class:BaseGameState
tradeinCards	Risk/RiskEngine.py	/^	def tradeinCards(self, cardSet):$/;"	m	class:RiskGame	access:public
unhighlightTerritory	Risk/RiskInterface.py	/^	def unhighlightTerritory(territory):$/;"	m	class:RiskInterface	access:public
units	conquest/models.py	/^    units = db.IntegerProperty()$/;"	v	class:MoveAction
update_from_state	static/board/conquest.js	/^function update_from_state(event, state){$/;"	f
update_from_state	templates/play_ox.html	/^	function update_from_state(event, state){$/;"	f
update_from_state	templates/play_simple.html	/^	function update_from_state(event, state){$/;"	f
update_region_text	static/board/conquest.js	/^function update_region_text(region){$/;"	f
user	profile/models.py	/^			user=gae_user,$/;"	v	class:UserProfile
user	profile/models.py	/^    user = db.UserProperty()$/;"	v	class:UserProfile
user_place_units	static/board/conquest.js	/^function user_place_units(region, units){$/;"	f
users_placed	conquest/models.py	/^    users_placed = db.IntegerProperty()$/;"	v	class:ConquestGameState
